let overrideRequire,mdxTransform,jsxBuilder,jsxTransform,highlight,abbreviate,importComponent,React,ReactDOMServer;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("pirates",[["addHook",["overrideRequire"],function(v){overrideRequire=v}]]);_34e‍.w("@mdx-js/mdx",[["sync",["mdxTransform"],function(v){mdxTransform=v}]]);_34e‍.w("./jsx",[["default",["jsxBuilder"],function(v){jsxBuilder=v}],["transform",["jsxTransform"],function(v){jsxTransform=v}]]);_34e‍.w("remark-highlight.js",[["default",["highlight"],function(v){highlight=v}]]);_34e‍.w("remark-abbr",[["default",["abbreviate"],function(v){abbreviate=v}]]);_34e‍.w("../utilities",[["importComponent",["importComponent"],function(v){importComponent=v}]]);_34e‍.w("react",[["default",["React"],function(v){React=v}]]);_34e‍.w("react-dom/server",[["default",["ReactDOMServer"],function(v){ReactDOMServer=v}]]);








const transform = (code) => {
  let jsxWithMDXTags = mdxTransform(code, {
    remarkPlugins: [abbreviate, highlight],
  })

  let jsx = `
    import { mdx } from "@mdx-js/react"

    ${jsxWithMDXTags}
  `

  return jsxTransform(jsx)
}

overrideRequire(transform, { exts: [".mdx"] })

const _34e‍anonymous=async (modulePath, props) => {
  let component = await importComponent(modulePath)
  let element = React.createElement(component.default)

  if (component.layout) {
    element = React.createElement(component.layout, props, element)
  }

  let html = ReactDOMServer.renderToStaticMarkup(element)

  return {
    meta: component.meta || {},
    output: html,
  }
};_34e‍.d(_34e‍anonymous);
